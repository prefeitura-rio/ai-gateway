---
# API Gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eai-agent-gateway
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: eai-agent-gateway
  template:
    metadata:
      labels:
        app: eai-agent-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: eai-agent-gateway
          image: ghcr.io/prefeitura-rio/app-eai-agent-gateway:latest
          command: ["/app/gateway"]
          envFrom:
            - secretRef:
                name: eai-agent-gateway-secrets
          env:
            - name: SERVER_PORT
              value: "8000"
            - name: METRICS_PORT
              value: "8080"
            - name: GIN_MODE
              value: "release"
            - name: LOG_FORMAT
              value: "json"
          resources:
            requests:
              ephemeral-storage: 500Mi
              cpu: 500m
              memory: 1Gi
            limits:
              ephemeral-storage: 2Gi
              cpu: 2000m
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /live
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 12
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      restartPolicy: Always

---
# Message Workers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eai-agent-gateway-worker
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: eai-agent-gateway-worker
  template:
    metadata:
      labels:
        app: eai-agent-gateway-worker
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: eai-agent-gateway-worker
          image: ghcr.io/prefeitura-rio/app-eai-agent-gateway:latest
          command: ["/app/worker"]
          envFrom:
            - secretRef:
                name: eai-agent-gateway-secrets
          env:
            - name: LOG_FORMAT
              value: "json"
          resources:
            requests:
              ephemeral-storage: 1Gi
              cpu: 1000m
              memory: 2Gi
            limits:
              ephemeral-storage: 4Gi
              cpu: 4000m
              memory: 4Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      restartPolicy: Always

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eai-agent-gateway
  name: eai-agent-gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
    - name: metrics
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: eai-agent-gateway

---
# Pod Disruption Budget for API
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: eai-agent-gateway-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: eai-agent-gateway

---
# Pod Disruption Budget for Workers
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: eai-agent-gateway-worker-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: eai-agent-gateway-worker
